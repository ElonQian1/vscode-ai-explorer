# AI Explorer - PR 标签自动化
name: PR Labeler

on:
  pull_request:
    types: [opened, synchronize, edited]

permissions:
  contents: read
  pull-requests: write

jobs:
  label:
    name: Auto Label PR
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Auto Label PR
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml

  size-label:
    name: PR Size Label
    runs-on: ubuntu-latest
    
    steps:
      - name: PR Size Labeler
        uses: codelytv/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size/XS'
          xs_max_size: 10
          s_label: 'size/S'
          s_max_size: 30
          m_label: 'size/M'
          m_max_size: 100
          l_label: 'size/L'
          l_max_size: 500
          xl_label: 'size/XL'
          fail_if_xl: false

  validate-title:
    name: Validate PR Title
    runs-on: ubuntu-latest
    
    steps:
      - name: Validate PR Title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          scopes: |
            core
            explorer
            blueprint
            uml
            webview
            ci
            deps
          requireScope: false
          disallowScopes: |
            release
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.

  conflict-check:
    name: Check for Conflicts
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check for merge conflicts
        run: |
          echo "🔍 检查合并冲突..."
          
          # 获取目标分支
          BASE_BRANCH=${{ github.base_ref }}
          echo "目标分支: $BASE_BRANCH"
          
          # 尝试合并检查
          git fetch origin $BASE_BRANCH
          
          if git merge-tree $(git merge-base HEAD origin/$BASE_BRANCH) HEAD origin/$BASE_BRANCH | grep -q "<<<<<<< "; then
            echo "⚠️ 检测到潜在的合并冲突"
            echo "请解决冲突后重新提交"
            exit 1
          else
            echo "✅ 未检测到合并冲突"
          fi